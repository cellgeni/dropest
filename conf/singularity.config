/*
vim: syntax=groovy
-*- mode: groovy;-*-
 * -------------------------------------------------
 *  Nextflow config file for use with Docker
 * -------------------------------------------------
 * Defines basic usage limits and docker image id.
 * Imported under the default 'docker' Nextflow
 * profile in nextflow.config
 * NOTE: Not suitable for production use, assumes
 * compute limits of only 16GB memory and 1 CPU core.
 */

executor {
    name = 'lsf'
    // to accommodate 384 well plates
    queueSize = 400
    // https://www.nextflow.io/docs/latest/executor.html#lsf
    perJobMemLimit = true
}

process {
  queue = 'normal'
  // this is required by bsub on farm3: selected[mem] should = rusage[mem]
  // http://mediawiki.internal.sanger.ac.uk/wiki/index.php/Submitting_large_memory_jobs
  // clusterOptions = { "-R \"select[mem>${task.memory.toMega()}]\"" }
  // No longer necessary in version 0.29 of NF.

  withName: irods {
    errorStrategy = 'ignore'
    memory = 2.GB
    maxForks = 20         /* This depends on the zone selection hack in bin/irods.sh */
  }
}

params {
  saveReference = true
  genomes_base = '/nfs/cellgeni/genomes'
  max_memory = 100.GB
  max_cpus = 32
  max_time = 12.h
}

singularity {
    enabled = true
    autoMounts = true
}

env.PATH = '/home/user/dropEst/build:$PATH'
env.LD_LIBRARY_PATH = '/usr/local/lib/R/lib/'
env.R_PROFILE = '/home/user/.Rprofile'

process {

  maxForks = 10
  cache = 'lenient'
  // afterScript = 'sleep 1'

  withName: irods {
    container = 'quay.io/cellgeni/irods'
    pod = [secret: 'irods-secret', mountPath: '/secret']
    beforeScript = "/iinit.sh"
    cpus = 4
  }
  withName: get_fastq_files_single {
    container = 'python:3.7'
    cpus = 1
  }
  withName: get_fastq_files {
    container = 'python:3.7'
    cpus = 1
  }
  withName: get_fastq_files {
    container = 'python:3.7'
    cpus = 1
  }
  withName: crams_to_fastq {
    container = 'quay.io/biocontainers/samtools:1.8--4'
    // beforeScript = "export REF_PATH='http:://www.ebi.ac.uk/ena/cram/md5/%s'"
    cpus = 4
  }
  withName: star {
    container = 'quay.io/biocontainers/star:2.5.4a--0'
    cpus = 4
  }
  withName: dropTag_inDrop_v2 {
    container = 'vpetukhov/dropest'
    pod = [runAsUser: 0]
    cpus = 4
  }
  withName: dropTag_inDrop_v3 {
    container = 'vpetukhov/dropest'
    pod = [runAsUser: 0]
    cpus = 4
  }
  withName: dropEst {
    container = 'vpetukhov/dropest'
    pod = [runAsUser: 0]
    cpus = 4
  }
  withName: dropReport {
    container = 'vpetukhov/dropest'
    pod = [runAsUser: 0]
    cpus = 4
  }
  withName: hisat2_align {
    container = 'quay.io/biocontainers/hisat2:2.1.0--py27h2d50403_2'
    cpus = 4
  }
  withName: hisat2_sort {
    container = 'quay.io/biocontainers/samtools:1.8--4'
    cpus = 4
  }
  withName: salmon {
    container = 'quay.io/biocontainers/salmon:0.9.1--1'
    cpus = 4
  }
  withName: fastqc {
    container = 'quay.io/biocontainers/fastqc:0.11.7--4'
    cpus = 4
  }
  withName: QCFiltReads {
    container = 'quay.io/biocontainers/fastqc:0.11.7--4'
    cpus = 4
  }
  withName: featureCounts {
    container = 'quay.io/biocontainers/subread:1.6.2--ha92aebf_0'
    cpus = 4
  }
  withName: merge_featureCounts {
    container = 'python:3.7'
    cpus = 1
  }
  withName: merge_starcounts {
    container = 'python:3.7'
    cpus = 1
  }
  withName: multiqc {
    container = 'quay.io/biocontainers/multiqc:1.6--py35h24bf2e0_0'
    cpus = 1
  }
  withName: indexbam {
    container = 'quay.io/biocontainers/samtools:1.8--4'
    cpus = 1
  }
  withName: mapsummary {
    container = 'quay.io/biocontainers/pandas:0.23.4--py36hf8a1672_0'
    cpus = 1
  }
  withName: lostcause {
    container = 'python:3.7'
    cpus = 1
  }
  withName: workflow_manifest {
    container = 'python:3.7'
    cpus = 1
  }
}

env {
  // REF_PATH = 'http:://sf2-farm-srv1.internal.sanger.ac.uk::8000/%s'
  // REF_PATH='http://www.ebi.ac.uk/ena/cram/md5/%s'
}